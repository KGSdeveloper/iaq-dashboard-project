{"ast":null,"code":"import { SENSOR_RANGES } from './constants';\nexport const formatValue = (value, decimals = 2) => {\n  return parseFloat(value).toFixed(decimals);\n};\nexport const getRandomInRange = (min, max) => {\n  return Math.random() * (max - min) + min;\n};\nexport const getCurrentTimestamp = () => {\n  return new Date().toISOString();\n};\nexport const getSensorStatus = (sensorType, value) => {\n  const ranges = SENSOR_RANGES[sensorType];\n  if (!ranges) return 'unknown';\n  switch (sensorType) {\n    case 'PM25':\n      return value <= ranges.good ? 'excellent' : value <= ranges.good * 2 ? 'good' : value <= ranges.good * 3 ? 'moderate' : 'poor';\n    case 'CO2':\n      return value <= ranges.good ? 'excellent' : value <= ranges.good * 1.5 ? 'good' : value <= ranges.good * 2 ? 'moderate' : 'poor';\n    case 'TEMPERATURE':\n      return value >= ranges.good.min && value <= ranges.good.max ? 'excellent' : 'moderate';\n    case 'HUMIDITY':\n      return value >= ranges.good.min && value <= ranges.good.max ? 'excellent' : 'moderate';\n    case 'TVOC':\n      return value <= ranges.good ? 'excellent' : value <= ranges.good * 2 ? 'good' : value <= ranges.good * 3 ? 'moderate' : 'poor';\n    default:\n      return 'unknown';\n  }\n};","map":{"version":3,"names":["SENSOR_RANGES","formatValue","value","decimals","parseFloat","toFixed","getRandomInRange","min","max","Math","random","getCurrentTimestamp","Date","toISOString","getSensorStatus","sensorType","ranges","good"],"sources":["D:/code projects/iaq-dashboard-project/frontend/src/utils/helpers.js"],"sourcesContent":["import { SENSOR_RANGES } from './constants';\r\n\r\nexport const formatValue = (value, decimals = 2) => {\r\n  return parseFloat(value).toFixed(decimals);\r\n};\r\n\r\nexport const getRandomInRange = (min, max) => {\r\n  return Math.random() * (max - min) + min;\r\n};\r\n\r\nexport const getCurrentTimestamp = () => {\r\n  return new Date().toISOString();\r\n};\r\n\r\nexport const getSensorStatus = (sensorType, value) => {\r\n  const ranges = SENSOR_RANGES[sensorType];\r\n  if (!ranges) return 'unknown';\r\n  \r\n  switch (sensorType) {\r\n    case 'PM25':\r\n      return value <= ranges.good ? 'excellent' : \r\n             value <= ranges.good * 2 ? 'good' : \r\n             value <= ranges.good * 3 ? 'moderate' : 'poor';\r\n    case 'CO2':\r\n      return value <= ranges.good ? 'excellent' : \r\n             value <= ranges.good * 1.5 ? 'good' : \r\n             value <= ranges.good * 2 ? 'moderate' : 'poor';\r\n    case 'TEMPERATURE':\r\n      return (value >= ranges.good.min && value <= ranges.good.max) ? 'excellent' : 'moderate';\r\n    case 'HUMIDITY':\r\n      return (value >= ranges.good.min && value <= ranges.good.max) ? 'excellent' : 'moderate';\r\n    case 'TVOC':\r\n      return value <= ranges.good ? 'excellent' : \r\n             value <= ranges.good * 2 ? 'good' : \r\n             value <= ranges.good * 3 ? 'moderate' : 'poor';\r\n    default:\r\n      return 'unknown';\r\n  }\r\n};"],"mappings":"AAAA,SAASA,aAAa,QAAQ,aAAa;AAE3C,OAAO,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,QAAQ,GAAG,CAAC,KAAK;EAClD,OAAOC,UAAU,CAACF,KAAK,CAAC,CAACG,OAAO,CAACF,QAAQ,CAAC;AAC5C,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAGA,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC5C,OAAOC,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIF,GAAG,GAAGD,GAAG,CAAC,GAAGA,GAAG;AAC1C,CAAC;AAED,OAAO,MAAMI,mBAAmB,GAAGA,CAAA,KAAM;EACvC,OAAO,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;AACjC,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAACC,UAAU,EAAEb,KAAK,KAAK;EACpD,MAAMc,MAAM,GAAGhB,aAAa,CAACe,UAAU,CAAC;EACxC,IAAI,CAACC,MAAM,EAAE,OAAO,SAAS;EAE7B,QAAQD,UAAU;IAChB,KAAK,MAAM;MACT,OAAOb,KAAK,IAAIc,MAAM,CAACC,IAAI,GAAG,WAAW,GAClCf,KAAK,IAAIc,MAAM,CAACC,IAAI,GAAG,CAAC,GAAG,MAAM,GACjCf,KAAK,IAAIc,MAAM,CAACC,IAAI,GAAG,CAAC,GAAG,UAAU,GAAG,MAAM;IACvD,KAAK,KAAK;MACR,OAAOf,KAAK,IAAIc,MAAM,CAACC,IAAI,GAAG,WAAW,GAClCf,KAAK,IAAIc,MAAM,CAACC,IAAI,GAAG,GAAG,GAAG,MAAM,GACnCf,KAAK,IAAIc,MAAM,CAACC,IAAI,GAAG,CAAC,GAAG,UAAU,GAAG,MAAM;IACvD,KAAK,aAAa;MAChB,OAAQf,KAAK,IAAIc,MAAM,CAACC,IAAI,CAACV,GAAG,IAAIL,KAAK,IAAIc,MAAM,CAACC,IAAI,CAACT,GAAG,GAAI,WAAW,GAAG,UAAU;IAC1F,KAAK,UAAU;MACb,OAAQN,KAAK,IAAIc,MAAM,CAACC,IAAI,CAACV,GAAG,IAAIL,KAAK,IAAIc,MAAM,CAACC,IAAI,CAACT,GAAG,GAAI,WAAW,GAAG,UAAU;IAC1F,KAAK,MAAM;MACT,OAAON,KAAK,IAAIc,MAAM,CAACC,IAAI,GAAG,WAAW,GAClCf,KAAK,IAAIc,MAAM,CAACC,IAAI,GAAG,CAAC,GAAG,MAAM,GACjCf,KAAK,IAAIc,MAAM,CAACC,IAAI,GAAG,CAAC,GAAG,UAAU,GAAG,MAAM;IACvD;MACE,OAAO,SAAS;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}