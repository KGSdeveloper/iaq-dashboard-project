{"ast":null,"code":"var _jsxFileName = \"D:\\\\code projects\\\\iaq-dashboard\\\\src\\\\components\\\\SensorCard.js\";\nimport React from 'react';\nimport { formatValue, getSensorStatus } from '../utils/helpers.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SensorCard = ({\n  title,\n  value,\n  unit,\n  icon,\n  sensorType,\n  showRange = false,\n  range = null\n}) => {\n  const status = getSensorStatus(sensorType, value);\n  const getStatusColor = status => {\n    switch (status) {\n      case 'excellent':\n        return '#10B981';\n      case 'good':\n        return '#3B82F6';\n      case 'moderate':\n        return '#F59E0B';\n      case 'poor':\n        return '#EF4444';\n      default:\n        return '#6B7280';\n    }\n  };\n  const getProgressPercentage = () => {\n    if (!range) return 0;\n    return Math.min(100, Math.max(0, (value - range.min) / (range.max - range.min) * 100));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensor-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-icon\",\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-status\",\n        style: {\n          color: getStatusColor(status)\n        },\n        children: \"\\u25CF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-value\",\n      children: [formatValue(value), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sensor-unit\",\n        children: unit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), showRange && range && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-range\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"range-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"range-fill\",\n          style: {\n            width: `${getProgressPercentage()}%`,\n            backgroundColor: getStatusColor(status)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"range-labels\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: range.min\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: range.max\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-status-text\",\n      style: {\n        color: getStatusColor(status)\n      },\n      children: status.charAt(0).toUpperCase() + status.slice(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = SensorCard;\nexport default SensorCard;\nvar _c;\n$RefreshReg$(_c, \"SensorCard\");","map":{"version":3,"names":["React","formatValue","getSensorStatus","jsxDEV","_jsxDEV","SensorCard","title","value","unit","icon","sensorType","showRange","range","status","getStatusColor","getProgressPercentage","Math","min","max","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","width","backgroundColor","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["D:/code projects/iaq-dashboard/src/components/SensorCard.js"],"sourcesContent":["import React from 'react';\r\nimport { formatValue, getSensorStatus } from '../utils/helpers.js';\r\n\r\nconst SensorCard = ({ \r\n  title, \r\n  value, \r\n  unit, \r\n  icon, \r\n  sensorType, \r\n  showRange = false,\r\n  range = null \r\n}) => {\r\n  const status = getSensorStatus(sensorType, value);\r\n  \r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'excellent': return '#10B981';\r\n      case 'good': return '#3B82F6';\r\n      case 'moderate': return '#F59E0B';\r\n      case 'poor': return '#EF4444';\r\n      default: return '#6B7280';\r\n    }\r\n  };\r\n\r\n  const getProgressPercentage = () => {\r\n    if (!range) return 0;\r\n    return Math.min(100, Math.max(0, ((value - range.min) / (range.max - range.min)) * 100));\r\n  };\r\n\r\n  return (\r\n    <div className=\"sensor-card\">\r\n      <div className=\"sensor-header\">\r\n        <div className=\"sensor-icon\">{icon}</div>\r\n        <div className=\"sensor-status\" style={{ color: getStatusColor(status) }}>\r\n          ‚óè\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"sensor-title\">{title}</div>\r\n      \r\n      <div className=\"sensor-value\">\r\n        {formatValue(value)}\r\n        <span className=\"sensor-unit\">{unit}</span>\r\n      </div>\r\n      \r\n      {showRange && range && (\r\n        <div className=\"sensor-range\">\r\n          <div className=\"range-bar\">\r\n            <div \r\n              className=\"range-fill\"\r\n              style={{ \r\n                width: `${getProgressPercentage()}%`,\r\n                backgroundColor: getStatusColor(status)\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"range-labels\">\r\n            <span>{range.min}</span>\r\n            <span>{range.max}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className=\"sensor-status-text\" style={{ color: getStatusColor(status) }}>\r\n        {status.charAt(0).toUpperCase() + status.slice(1)}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SensorCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,eAAe,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,UAAU,GAAGA,CAAC;EAClBC,KAAK;EACLC,KAAK;EACLC,IAAI;EACJC,IAAI;EACJC,UAAU;EACVC,SAAS,GAAG,KAAK;EACjBC,KAAK,GAAG;AACV,CAAC,KAAK;EACJ,MAAMC,MAAM,GAAGX,eAAe,CAACQ,UAAU,EAAEH,KAAK,CAAC;EAEjD,MAAMO,cAAc,GAAID,MAAM,IAAK;IACjC,QAAQA,MAAM;MACZ,KAAK,WAAW;QAAE,OAAO,SAAS;MAClC,KAAK,MAAM;QAAE,OAAO,SAAS;MAC7B,KAAK,UAAU;QAAE,OAAO,SAAS;MACjC,KAAK,MAAM;QAAE,OAAO,SAAS;MAC7B;QAAS,OAAO,SAAS;IAC3B;EACF,CAAC;EAED,MAAME,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAI,CAACH,KAAK,EAAE,OAAO,CAAC;IACpB,OAAOI,IAAI,CAACC,GAAG,CAAC,GAAG,EAAED,IAAI,CAACE,GAAG,CAAC,CAAC,EAAG,CAACX,KAAK,GAAGK,KAAK,CAACK,GAAG,KAAKL,KAAK,CAACM,GAAG,GAAGN,KAAK,CAACK,GAAG,CAAC,GAAI,GAAG,CAAC,CAAC;EAC1F,CAAC;EAED,oBACEb,OAAA;IAAKe,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BhB,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BhB,OAAA;QAAKe,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEX;MAAI;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACzCpB,OAAA;QAAKe,SAAS,EAAC,eAAe;QAACM,KAAK,EAAE;UAAEC,KAAK,EAAEZ,cAAc,CAACD,MAAM;QAAE,CAAE;QAAAO,QAAA,EAAC;MAEzE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENpB,OAAA;MAAKe,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEd;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAE3CpB,OAAA;MAAKe,SAAS,EAAC,cAAc;MAAAC,QAAA,GAC1BnB,WAAW,CAACM,KAAK,CAAC,eACnBH,OAAA;QAAMe,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAEZ;MAAI;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EAELb,SAAS,IAAIC,KAAK,iBACjBR,OAAA;MAAKe,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BhB,OAAA;QAAKe,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBhB,OAAA;UACEe,SAAS,EAAC,YAAY;UACtBM,KAAK,EAAE;YACLE,KAAK,EAAE,GAAGZ,qBAAqB,CAAC,CAAC,GAAG;YACpCa,eAAe,EAAEd,cAAc,CAACD,MAAM;UACxC;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNpB,OAAA;QAAKe,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BhB,OAAA;UAAAgB,QAAA,EAAOR,KAAK,CAACK;QAAG;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBpB,OAAA;UAAAgB,QAAA,EAAOR,KAAK,CAACM;QAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eAEDpB,OAAA;MAAKe,SAAS,EAAC,oBAAoB;MAACM,KAAK,EAAE;QAAEC,KAAK,EAAEZ,cAAc,CAACD,MAAM;MAAE,CAAE;MAAAO,QAAA,EAC1EP,MAAM,CAACgB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGjB,MAAM,CAACkB,KAAK,CAAC,CAAC;IAAC;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACQ,EAAA,GAjEI3B,UAAU;AAmEhB,eAAeA,UAAU;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}