{"ast":null,"code":"\"use strict\";\n\n/**\n * Calculates the buffers CRC16.\n *\n * @param {Buffer} buffer the data buffer.\n * @return {number} the calculated CRC16.\n */\nmodule.exports = function crc16(buffer) {\n  let crc = 0xFFFF;\n  let odd;\n  for (let i = 0; i < buffer.length; i++) {\n    crc = crc ^ buffer[i];\n    for (let j = 0; j < 8; j++) {\n      odd = crc & 0x0001;\n      crc = crc >> 1;\n      if (odd) {\n        crc = crc ^ 0xA001;\n      }\n    }\n  }\n  return crc;\n};","map":{"version":3,"names":["module","exports","crc16","buffer","crc","odd","i","length","j"],"sources":["D:/code projects/iaq-dashboard/node_modules/modbus-serial/utils/crc16.js"],"sourcesContent":["\"use strict\";\n/**\n * Calculates the buffers CRC16.\n *\n * @param {Buffer} buffer the data buffer.\n * @return {number} the calculated CRC16.\n */\nmodule.exports = function crc16(buffer) {\n    let crc = 0xFFFF;\n    let odd;\n\n    for (let i = 0; i < buffer.length; i++) {\n        crc = crc ^ buffer[i];\n\n        for (let j = 0; j < 8; j++) {\n            odd = crc & 0x0001;\n            crc = crc >> 1;\n            if (odd) {\n                crc = crc ^ 0xA001;\n            }\n        }\n    }\n\n    return crc;\n};\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAO,GAAG,SAASC,KAAKA,CAACC,MAAM,EAAE;EACpC,IAAIC,GAAG,GAAG,MAAM;EAChB,IAAIC,GAAG;EAEP,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACpCF,GAAG,GAAGA,GAAG,GAAGD,MAAM,CAACG,CAAC,CAAC;IAErB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACxBH,GAAG,GAAGD,GAAG,GAAG,MAAM;MAClBA,GAAG,GAAGA,GAAG,IAAI,CAAC;MACd,IAAIC,GAAG,EAAE;QACLD,GAAG,GAAGA,GAAG,GAAG,MAAM;MACtB;IACJ;EACJ;EAEA,OAAOA,GAAG;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}